{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","event","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAIVC,mBAAS,IAJC,mBAIvCC,EAJuC,KAI3BC,EAJ2B,KAwB9C,OACI,uBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC5CN,EAAc,MAQlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAxBc,SAACC,GAEvBV,EAAcU,EAAMC,OAAOH,c,+BCNtBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAEpB,IAEEqB,EDfuBK,CAAa1B,GAA/Ba,EALyB,EAK9BN,KAAaa,EALiB,EAKjBA,QAEpB,OACI,qCAEI,6BAAKpB,IAEJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEbxBgB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAc9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACA,6BAEQS,EAAWgB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCzBjC4B,IAASC,OAGP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cf62328.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    //* HOOKS\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n        // console.log(event.target.value);\n        setInputValue(event.target.value);\n    };\n\n    const hanldeSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(categories => [ inputValue,...categories]);\n            setInputValue('');\n        }\n\n\n\n    };\n\n    return (\n        <form onSubmit={hanldeSubmit}>\n            <h1>{inputValue}</h1>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n\n\n","\n\n\n\n\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QU9gF0PFqzkr1TR80Qb9FuzfDBYYjG1b`;\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url,\n        };\n    });\n    // console.log(gifs);\n\n    return gifs;\n\n};","import React from 'react'\n\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    // console.log({ id, title, url })\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n}\n","// import React, { useEffect, useState } from 'react'\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    //* Custom HOOK'S\n\n    const {data:images ,loading}= useFetchGifs(category);\n\n    return (\n        <>\n\n            <h2>{category}</h2>\n            {/* {loading ? 'Cargando....' : 'Cargado' } */}\n            {loading && <p>loading</p>}\n            <div className=\"card-grid\">\n\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n\n\n            </div>\n\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\n\n\nexport const useFetchGifs = (category) => {\n \n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n\n        getGifs(category)\n        .then(imgs => {\n            setState({\n                data: imgs, \n                loading: false,\n            });\n        });\n\n    }, [ category]);\n\n    return state ;\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n//* Componente GifExpertApp\n\n\n//? <h2>GifExpertAPp</h2>\n//? <hr />\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One punch']);\n\n\n    // const handleAdd = () => {\n\n    //     setCategories([\n    //         ...categories,\n    //         'hola'\n    //     ]);\n\n    // };\n\n    return (\n        <>\n            <h2>GifExpertAPp</h2>\n            <AddCategory setCategories={setCategories} />\n            {/* <AddCategory /> */}\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n  // <App />,\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}